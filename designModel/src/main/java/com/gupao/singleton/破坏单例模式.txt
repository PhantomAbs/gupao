1反射
    成因：单例构造函数私有化，但反射可打破私有(setAccessible)
         进行实例化(newInstance)
    预防：构造函数中判断是否已经实例化进行防范
2序列化
    成因：序列化持久到本地后，再次读取时（反序列化）时，会重新
         分配内存创建
    预防：重写 readResolve()方法,ObjectInputStream类在
         最后反射调用readResolve()方法，如果堆中类已有实例
         则直接返回该实例